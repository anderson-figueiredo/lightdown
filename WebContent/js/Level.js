// -- user code here --

/* --- start generated code --- */

// Generated by Phaser Editor v1.4.1 (Phaser v2.6.2)

/**
 * Level.
 */
function Level() {

	Phaser.State.call(this);

}

/** @type Phaser.State */
var Level_proto = Object.create(Phaser.State.prototype);
Level.prototype = Level_proto;
Level.prototype.constructor = Level;

Level.prototype.init = function() {
	console.log('Init do Level');

	this.scale.pageAlignHorizontally = true;
	this.scale.pageAlignVertically = true;
	this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
	// Habilita fisica
	this.physics.startSystem(Phaser.Physics.ARCADE);
	// this.physics.arcade.gravity.y = 800;
};

Level.prototype.preload = function() {
	console.log('Preload do Level');
	this.load.pack("level", "assets/assets-pack.json");
};

Level.prototype.create = function() {
	console.log('Create do Level adiciona as porra toda');
	this.scene = new Scene1(this.game);

	// set the physics properties of the collision sprites
	console.log(this.scene);
	this.scene.fCollisionLayer.setAll("body.immovable", true);
	this.scene.fCollisionLayer.setAll("body.allowGravity", false);
	// hide all objects of the collision layer
//	this.scene.fCollisionLayer.setAll("renderable", false);

	this.cursors = this.input.keyboard.createCursorKeys();

};

/* --- end generated code --- */
// -- user code here --
Level.prototype.update = function() {

	this.physics.arcade.collide(this.scene.fRobin, this.scene.fCollisionLayer);

	if (this.cursors.left.isDown) {
		console.log('moveLeft');
		// move to the left
		this.scene.fRobin.body.velocity.x = -50;
	} else if (this.cursors.right.isDown) {
		console.log('moveRight');
		// move to the right
		this.scene.fRobin.body.velocity.x = 50;
	} else if (this.cursors.up.isDown) {
		console.log('moveUp');
		this.scene.fRobin.body.velocity.y = -50;

	}  else if (this.cursors.down.isDown) {
		console.log('moveDown');
		this.scene.fRobin.play("moveDown");
		this.scene.fRobin.body.velocity.y = 50;
	} else {
		
		console.log('stopMove');
		this.scene.fRobin.play("iddle");
		this.scene.fRobin.body.velocity.x = 0;
		this.scene.fRobin.body.velocity.y = 0;
	}
	
	// update the facing of the player
	if (this.cursors.down.isDown) {
	    // face left
	    //this.scene.fRobin.scale.x = 1;
	} else if (this.cursors.down.isDown) {
	   // face right
	   //this.scene.fRobin.scale.x = -1;
	}

	// a flag to know if the player is (down) touching the platforms
	//var touching = this.scene.fZelda.body.touching;
	//console.log(touching.down)
	
	
	
//	if (touching) {
//		//console.log('Mexendo')
//	    if (this.scene.fZelda.body.velocity.x == 0 && this.scene.fZelda.body.velocity.y == 0) {
//	        // if it is not moving horizontally play the idle
//	        this.scene.fZelda.play("idle");
//	        //console.log('PARADO')
//	    } else {
//	        // if it is moving play the walk
//	        
//	    	this.scene.fZelda.play("walk");
//	    }
//	} else {
//	    // it is not touching the platforms so it means it is jumping.
//	    //this.scene.fZelda.play("jump");
//	}

};
